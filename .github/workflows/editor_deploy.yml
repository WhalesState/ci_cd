name: Eeditor Deploy
on:
  workflow_call:
    inputs:
      build_sha:
        description: "Build commit SHA to use for this job"
        required: true
        type: string
      runner_id:
        description: "Runner ID of the Parent Runner"
        required: true
        type: string
      new_version:
        description: "New Version that'll be Deployed"
        required: true
        type: string
      monoglue-build:
        description: "Build Status for Monoglue"
        required: true
        type: string
      windows-build:
        description: "Build Status for Windows"
        required: true
        type: string
      macos-build:
        description: "Build Status for MacOS"
        required: true
        type: string
      linux-build:
        description: "Build Status for Linux"
        required: true
        type: string
      android-build:
        description: "Build Status for Android"
        required: true
        type: string
      release_url:
        description: "Release URL to upload files to the Release URL"
        required: true
        type: string

# Global Settings
env:
  # Used for the cache key. Add version suffix to force clean build.
  GODOT_BASE_BRANCH: blazium-dev
  BASE_NAME: BlaziumEditor_v${{ inputs.new_version }}

concurrency:
  group: ci-${{github.actor}}-${{ github.event.client_payload.type || 'nightly' }}-editor-deploy
  cancel-in-progress: true

jobs:
  do-we-deploy-lol:
    name: Should we Deploy?
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.evaluate.outputs.proceed }}
    steps:
      - name: Print Inputs and Initial Debugging
        run: |
          echo "Client Payload Force: ${{ github.event.client_payload.force }}"
          echo "Inputs:"
          echo "  - monoglue-build: ${{ inputs.monoglue-build }}"
          echo "  - windows-build: ${{ inputs.windows-build }}"
          echo "  - macos-build: ${{ inputs.macos-build }}"
          echo "  - linux-build: ${{ inputs.linux-build }}"
          echo "  - android-build: ${{ inputs.android-build }}"
          echo "--- End of Inputs ---"

      - name: Are we Deploying?
        id: evaluate
        run: |
          echo "Evaluating Deployment Condition..."  >> $GITHUB_STEP_SUMMARY
          if [[ "${{ github.event.client_payload.force }}" == "true" ]]; then
            echo "Force deploy is true. Proceeding."  >> $GITHUB_STEP_SUMMARY
            echo "proceed=true" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.monoglue-build }}" == "success" && 
                  "${{ inputs.windows-build }}" == "success" && 
                  "${{ inputs.macos-build }}" == "success" && 
                  "${{ inputs.linux-build }}" == "success" && 
                  "${{ inputs.android-build }}" == "success" ]]; then
            echo "All builds succeeded. Proceeding."  >> $GITHUB_STEP_SUMMARY
            echo "proceed=true" >> $GITHUB_OUTPUT
          else
            echo "Conditions not met. Skipping deploy."  >> $GITHUB_STEP_SUMMARY
            echo "proceed=false" >> $GITHUB_OUTPUT
          fi

      - name: Log Outputs to Step Summary
        run: |
          echo "### Debugging Outputs" >> $GITHUB_STEP_SUMMARY
          echo "Client Payload Force: ${{ github.event.client_payload.force }}" >> $GITHUB_STEP_SUMMARY
          echo "Inputs:" >> $GITHUB_STEP_SUMMARY
          echo "  - monoglue-build: ${{ inputs.monoglue-build }}" >> $GITHUB_STEP_SUMMARY
          echo "  - windows-build: ${{ inputs.windows-build }}" >> $GITHUB_STEP_SUMMARY
          echo "  - macos-build: ${{ inputs.macos-build }}" >> $GITHUB_STEP_SUMMARY
          echo "  - linux-build: ${{ inputs.linux-build }}" >> $GITHUB_STEP_SUMMARY
          echo "  - android-build: ${{ inputs.android-build }}" >> $GITHUB_STEP_SUMMARY
          echo "Proceed Output: ${{ steps.evaluate.outputs.proceed }}" >> $GITHUB_STEP_SUMMARY

      - name: Final Debug Output
        run: |
          echo "Proceed Output: ${{ steps.evaluate.outputs.proceed }}"
  web-deploy:
    name: Deploying Web Editor to ${{ github.event.client_payload.type || 'nightly' }}
    needs: do-we-deploy-lol
    if: >
      needs.do-we-deploy-lol.outputs.proceed == 'true' ||
      needs.do-we-deploy-lol.outputs.proceed == true
    runs-on: ubuntu-latest
    env:
      APP_NAME_BASE: "blazium_web-editor"  # Define a global base app name
      CDN_URL: "https://cdn.blazium.app/"
      DEPLOY_TYPE: web-editor
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download and extract web editor package
        run: |
          # Create storage directory
          mkdir -p cicd/storage
          
          # Download the .tar.gz package instead of .zip
          curl -L "${{ env.CDN_URL }}${{ env.DEPLOY_TYPE }}/${{ github.event.client_payload.type || 'nightly' }}/${{ env.DEPLOY_TYPE }}-${{ github.event.client_payload.type || 'nightly' }}.tar.gz" -o cicd/storage/web-editor.tar.gz

          # Extract the main .tar.gz file
          tar -xzf cicd/storage/web-editor.tar.gz -C cicd/storage
          
          # Find the inner .zip file and unzip it
          inner_zip=$(find cicd/storage -type f -name 'blazium.web.editor.*.zip' | head -n 1)
          mkdir -p ./cicd/web-editor/static
          unzip "$inner_zip" -d ./cicd/web-editor/static
          
          # Rename the main HTML file
          mv ./cicd/web-editor/static/blazium.editor.html ./cicd/web-editor/static/index.html

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./cicd/web-editor
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME_BASE }}-${{ github.event.client_payload.type || 'nightly' }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME_BASE }}-${{ github.event.client_payload.type || 'nightly' }}:${{ inputs.new_version }}

      - name: Notify Cerebro to Deploy Web Build
        uses: ./.github/actions/cerebro-deploy
        with:
          name: web-editor
          type: ${{ github.event.client_payload.type || 'nightly' }}
          cerebro_url: ${{ secrets.CEREBRO_URL }}
          cerebro_auth: ${{ secrets.BLAZIUM_AUTH }}

  deploy-editors:
    runs-on: "ubuntu-20.04"
    needs: do-we-deploy-lol
    if: >
      needs.do-we-deploy-lol.outputs.proceed == 'true' ||
      needs.do-we-deploy-lol.outputs.proceed == true
    name: Editor Deploy
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: blazium-engine/ci_cd
          submodules: recursive

      - name: Download All Template Files
        uses: ./.github/actions/cerebro-download-multi-build
        with:
          names: |
            linux-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            web-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-mono-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}-meta
            windows-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
          run_id: ${{ inputs.runner_id }}
          cerebro_url: ${{ secrets.CEREBRO_URL }}
          cerebro_auth: ${{ secrets.BLAZIUM_AUTH }}
          folder: ${{ github.workspace }}/downloads

      - name: Uncompress Templates
        uses: ./.github/actions/multi-uncompress-tar-gz
        with:
          names: |
            linux-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            web-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-mono-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}-meta
            windows-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
          input_dir: ${{ github.workspace }}/downloads
          output_dir: ${{ github.workspace }}/extracted

      - name: Edit Editor Filenames in-Place
        uses: ./.github/actions/multi-rename-inplace
        with:
          names: |
            linux-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            web-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-mono-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}-meta
            android-editor-${{ github.event.client_payload.type || 'nightly' }}-meta
            windows-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
          filename_old: |
            blazium.linuxbsd.editor.x86_64
            blazium.linuxbsd.editor.x86_64.mono
            blazium.linuxbsd.editor.x86_32.mono
            blazium.linuxbsd.editor.x86_32
            blazium.windows.editor.x86_64.mono.exe
            blazium.windows.editor.x86_64.mono.console.exe
            blazium.windows.editor.x86_64.exe
            blazium.windows.editor.x86_64.console.exe
            blazium.windows.editor.x86_32.mono.exe
            blazium.windows.editor.x86_32.mono.console.exe
            blazium.windows.editor.x86_32.exe
            blazium.windows.editor.x86_32.console.exe
            blazium.web.editor.wasm32.zip
            Blazium_macos.universal.zip
            Blazium_macos.universal.zip
            android_editor-android-debug.aab
            android_editor-android-debug.apk
            android_editor-horizonos-debug.aab
            android_editor-horizonos-debug.apk
            blazium.windows.editor.arm64.llvm.exe
            blazium.windows.editor.arm64.llvm.console.exe
            blazium.windows.editor.arm64.llvm.mono.exe
            blazium.windows.editor.arm64.llvm.mono.console.exe
            blazium.windows.editor.arm32.llvm.exe
            blazium.windows.editor.arm32.llvm.console.exe
            blazium.windows.editor.arm32.llvm.mono.exe
            blazium.windows.editor.arm32.llvm.mono.console.exe
            blazium.linuxbsd.editor.arm64.llvm
            blazium.linuxbsd.editor.arm64.llvm.mono
            blazium.linuxbsd.editor.arm32.llvm
            blazium.linuxbsd.editor.arm32.llvm.mono
          filename_new: |
            ${{ env.BASE_NAME }}_linux.x86_64
            ${{ env.BASE_NAME }}_linux.mono.x86_64
            ${{ env.BASE_NAME }}_linux.mono.x86_32
            ${{ env.BASE_NAME }}_linux.x86_32
            ${{ env.BASE_NAME }}_windows.mono.64bit.exe
            ${{ env.BASE_NAME }}_windows.mono.64bit.console.exe
            ${{ env.BASE_NAME }}_windows.64bit.exe
            ${{ env.BASE_NAME }}_windows.64bit.console.exe
            ${{ env.BASE_NAME }}_windows.mono.32bit.exe
            ${{ env.BASE_NAME }}_windows.mono.32bit.console.exe
            ${{ env.BASE_NAME }}_windows.32bit.exe
            ${{ env.BASE_NAME }}_windows.32bit.console.exe
            ${{ env.BASE_NAME }}_web.wasm32.zip
            ${{ env.BASE_NAME }}_macos.universal.zip
            ${{ env.BASE_NAME }}_macos.universal.mono.zip
            ${{ env.BASE_NAME }}_android.aab
            ${{ env.BASE_NAME }}_android.apk
            ${{ env.BASE_NAME }}_android.meta.aab
            ${{ env.BASE_NAME }}_android.meta.apk
            ${{ env.BASE_NAME }}_windows.arm64.exe
            ${{ env.BASE_NAME }}_windows.arm64.console.exe
            ${{ env.BASE_NAME }}_windows.mono.arm64.exe
            ${{ env.BASE_NAME }}_windows.mono.arm64.console.exe
            ${{ env.BASE_NAME }}_windows.arm32.exe
            ${{ env.BASE_NAME }}_windows.arm32.console.exe
            ${{ env.BASE_NAME }}_windows.mono.arm32.exe
            ${{ env.BASE_NAME }}_windows.mono.arm32.console.exe
            ${{ env.BASE_NAME }}_linux.arm64
            ${{ env.BASE_NAME }}_linux.mono.arm64
            ${{ env.BASE_NAME }}_linux.arm32
            ${{ env.BASE_NAME }}_linux.mono.arm32
          input_dir: ${{ github.workspace }}/extracted


      - name: Delete Editor Filenames/Folders in-Place
        uses: ./.github/actions/multi-delete-inplace
        with:
          names: |
            linux-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            web-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-mono-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}-meta
            windows-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
          input_dir: ${{ github.workspace }}/extracted
          items_to_delete: |
            build_deps/


      - name: Rename Folders then Zip/Move Folders
        uses: ./.github/actions/multi-folder-zip
        with:
          names: |
            linux-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-64bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-32bit-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-32bit-${{ github.event.client_payload.type || 'nightly' }}
            web-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-${{ github.event.client_payload.type || 'nightly' }}
            macos-editor-mono-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}
            android-editor-${{ github.event.client_payload.type || 'nightly' }}-meta
            windows-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            windows-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm64-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-arm32-${{ github.event.client_payload.type || 'nightly' }}
            linux-editor-mono-arm32-${{ github.event.client_payload.type || 'nightly' }}
          filename_new: |
            ${{ env.BASE_NAME }}_linux.x86_64
            ${{ env.BASE_NAME }}_linux.mono.x86_64
            ${{ env.BASE_NAME }}_linux.mono.x86_32
            ${{ env.BASE_NAME }}_linux.x86_32
            ${{ env.BASE_NAME }}_windows.mono.64bit
            ${{ env.BASE_NAME }}_windows.64bit
            ${{ env.BASE_NAME }}_windows.mono.32bit
            ${{ env.BASE_NAME }}_windows.32bit
            ${{ env.BASE_NAME }}_web
            ${{ env.BASE_NAME }}_macos
            ${{ env.BASE_NAME }}_macos.mono
            ${{ env.BASE_NAME }}_android
            ${{ env.BASE_NAME }}_android.meta
            ${{ env.BASE_NAME }}_windows.arm64
            ${{ env.BASE_NAME }}_windows.mono.arm64
            ${{ env.BASE_NAME }}_windows.arm32
            ${{ env.BASE_NAME }}_windows.mono.arm32
            ${{ env.BASE_NAME }}_linux.arm64
            ${{ env.BASE_NAME }}_linux.mono.arm64
            ${{ env.BASE_NAME }}_linux.arm32
            ${{ env.BASE_NAME }}_linux.mono.arm32

          input_dir: ${{ github.workspace }}/extracted
          output_dir: ${{ github.workspace }}/editors

      - name: Generate Checksums for Editors
        uses: ./.github/actions/checksum-txt-generator
        with:
          directory: ${{ github.workspace }}/editors

      - name: Generate JSON with File Info and Checksums
        shell: bash
        env:
          BASE_NAME: ${{ env.BASE_NAME }}
          URL_BASE: ${{ secrets.CDN_URL }}/${{ github.event.client_payload.type || 'nightly' }}/${{ inputs.new_version }}
        run: |
          # Define the editors directory and output file
          EDITORS_DIR="${GITHUB_WORKSPACE}/editors"
          OUTPUT_FILE="${EDITORS_DIR}/editors.json"

          # Ensure the directory exists
          if [ ! -d "$EDITORS_DIR" ]; then
            echo "Error: Directory $EDITORS_DIR does not exist."
            exit 1
          fi

          # Initialize JSON array
          JSON_ARRAY="[]"

          # List of files to process
          FILE_NAMES=(
            "${BASE_NAME}_linux.x86_64.zip"
            "${BASE_NAME}_linux.mono.x86_64.zip"
            "${BASE_NAME}_linux.mono.x86_32.zip"
            "${BASE_NAME}_linux.x86_32.zip"
            "${BASE_NAME}_windows.mono.64bit.zip"
            "${BASE_NAME}_windows.64bit.zip"
            "${BASE_NAME}_windows.mono.32bit.zip"
            "${BASE_NAME}_windows.32bit.zip"
            "${BASE_NAME}_web.zip"
            "${BASE_NAME}_macos.zip"
            "${BASE_NAME}_macos.mono.zip"
            "${BASE_NAME}_android.zip" 
            "${BASE_NAME}_android.meta.zip"
            "${BASE_NAME}_windows.arm64.zip"
            "${BASE_NAME}_windows.mono.arm64.zip"
            "${BASE_NAME}_windows.arm32.zip"
            "${BASE_NAME}_windows.mono.arm32.zip"
            "${BASE_NAME}_linux.arm64.zip"
            "${BASE_NAME}_linux.mono.arm64.zip"
            "${BASE_NAME}_linux.arm32.zip"
            "${BASE_NAME}_linux.mono.arm32.zip"
          )

          # Process each file
          for FILE_NAME in "${FILE_NAMES[@]}"; do
            FILE_PATH="${EDITORS_DIR}/${FILE_NAME}"

            if [ -f "$FILE_PATH" ]; then
              # Compute file details
              FILE_SHA512=$(sha512sum "$FILE_PATH" | awk '{print $1}')
              FILE_SHA256=$(sha256sum "$FILE_PATH" | awk '{print $1}')
              FILE_SIZE=$(stat -c%s "$FILE_PATH")
              FILE_TIMESTAMP=$(date -r "$FILE_PATH" +"%Y-%m-%dT%H:%M:%SZ")

              # Append details to JSON array
              JSON_ARRAY=$(echo "$JSON_ARRAY" | jq \
                --arg name "$FILE_NAME" \
                --arg sha512 "$FILE_SHA512" \
                --arg sha256 "$FILE_SHA256" \
                --arg size "$FILE_SIZE" \
                --arg url "${URL_BASE}/$FILE_NAME" \
                --arg timestamp "$FILE_TIMESTAMP" \
                '. + [{
                  "filename": $name,
                  "download_url": $url,
                  "sha512": $sha512,
                  "sha256": $sha256,
                  "size": ($size | tonumber),
                  "timestamp": $timestamp
                }]'
              )
            else
              echo "Warning: File $FILE_PATH does not exist. Skipping." >> $GITHUB_STEP_SUMMARY
            fi
          done

          # Save JSON array to file
          echo "$JSON_ARRAY" > "$OUTPUT_FILE"

          # Log the generated JSON
          echo "Generated JSON file: $OUTPUT_FILE" >> $GITHUB_STEP_SUMMARY
          echo "Contents:" >> $GITHUB_STEP_SUMMARY
          cat "$OUTPUT_FILE" >> $GITHUB_STEP_SUMMARY

      - uses: ./.github/actions/multi-do-upload
        name: Upload Editors
        with:
          files: |
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.x86_64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.mono.x86_64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.mono.x86_32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.x86_32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.mono.64bit.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.64bit.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.mono.32bit.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.32bit.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_web.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_macos.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_macos.mono.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_android.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_android.meta.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.arm64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.mono.arm64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.arm32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.mono.arm32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.arm64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.mono.arm64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.arm32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.mono.arm32.zip
            ${{ github.workspace }}/editors/editors.json
          space_name: ${{ secrets.DO_SPACE_NAME }}
          space_region: ${{ secrets.DO_SPACE_REGION }}
          access_key: ${{ secrets.DO_ACCESS_KEY }}
          secret_key: ${{ secrets.DO_SECRET_KEY }}
          space_path: ${{ github.event.client_payload.type || 'nightly' }}/${{ inputs.new_version }}

      - name: Upload assets to GitHub release
        uses: ./.github/actions/upload-github-release
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPLOAD_URL: ${{ inputs.release_url }}
          FILES: |
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.x86_64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.mono.x86_64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.mono.x86_32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.x86_32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.mono.64bit.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.64bit.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.mono.32bit.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.32bit.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_web.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_macos.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_macos.mono.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_android.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_android.meta.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.arm64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.mono.arm64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.arm32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_windows.mono.arm32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.arm64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.mono.arm64.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.arm32.zip
            ${{ github.workspace }}/editors/${{ env.BASE_NAME }}_linux.mono.arm32.zip
          DEBUG: "true"
