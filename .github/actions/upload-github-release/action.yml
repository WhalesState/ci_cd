name: 'Upload Files to GitHub Release'

description: 'GitHub Action to upload multiple files to a GitHub release.'

inputs:
  GITHUB_TOKEN:
    description: 'GitHub token for authentication.'
    required: true
  UPLOAD_URL:
    description: 'Upload URL for the GitHub release assets.'
    required: true
  FILES:
    description: 'Array of file paths to upload.'
    required: true
  DEBUG:
    description: 'Enable debug output for the upload process.'
    required: false
    default: "false"

outputs:
  uploaded_files:
    description: 'List of successfully uploaded files with their browser download URLs.'
    value: ${{ steps.upload_files.outputs.uploaded_files }}

runs:
  using: 'composite'
  steps:
    - name: Upload files to GitHub release
      id: upload_files
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        INPUT_UPLOAD_URL: ${{ inputs.UPLOAD_URL }}
        INPUT_FILES: ${{ inputs.FILES }}
        INPUT_DEBUG: ${{ inputs.DEBUG }}
      run: |
        UPLOADED_FILES=()
        CLEANED_URL=$(echo "$INPUT_UPLOAD_URL" | sed 's/{.*}//')

        for file in ${INPUT_FILES}; do
          BASENAME=$(basename "$file")
          MIME_TYPE=$(file -b --mime-type "$file")
          URL="$CLEANED_URL?name=$BASENAME"

          RESPONSE=$(curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            -H "Content-Type: $MIME_TYPE" \
            --data-binary "@$file" \
            "$URL")

          BROWSER_DOWNLOAD_URL=$(echo "$RESPONSE" | jq -r '.browser_download_url')

          if [[ -z "$BROWSER_DOWNLOAD_URL" || "$BROWSER_DOWNLOAD_URL" == "null" ]]; then
            echo "::error::Failed to upload $file. Response: $RESPONSE"
            echo "Error uploading $file" >> $GITHUB_STEP_SUMMARY
            echo "Response: $RESPONSE" >> $GITHUB_STEP_SUMMARY
            continue
          fi

          echo "Successfully uploaded $file: $BROWSER_DOWNLOAD_URL" >> $GITHUB_STEP_SUMMARY
          UPLOADED_FILES+=("$BROWSER_DOWNLOAD_URL")
        done

        if [[ "$INPUT_DEBUG" == "true" ]]; then
          echo "Debug: Uploaded files summary:" >> $GITHUB_STEP_SUMMARY
          printf "%s\n" "${UPLOADED_FILES[@]}" >> $GITHUB_STEP_SUMMARY
        fi

        echo "uploaded_files=$(printf ",%s" "${UPLOADED_FILES[@]}" | cut -c 2-)" >> $GITHUB_OUTPUT
